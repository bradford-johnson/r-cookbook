{
  "hash": "0ef657b13f363b52db4e5a12e6a32c6a",
  "result": {
    "markdown": "# Cleaning Data\n\nCleaning data is one of the most important steps to any data analytics project. Cleaning data can involve anything from changing the case of characters from uppercase to lowercase to removing outliers from a data set, or even figuring out what to do with missing values. Having clean data is essential for making recommendations to stakeholders as your analysis can only be as strong as your data is clean. So very clean and structured data may lead you to entirely different insights than if you where to not clean it at all.\n\nThere are countless ways to clean your data in R, and I will show you different ways I have cleaned up data sets.\n\n## Column Names (Headers)\n\nHowever, first I think it is important to have clean and concise but descriptive headers, when dealing with tabular data. There have been many times where I load some data into R, and the headers are all uppercase, contain spaces, or something else that makes them annoying to work with. The `janitor` package is great because it can help clean up the headers (or column names) so they are easier to work with. I will load in the `readr` package to import a hand crafted `.csv` that I made for this, the `dplyr` package so I can pipe the data into functions, and the `DT` package for nice looking data tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(janitor)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(DT)\n\n\n# read in csv\ndirty_df <- read_csv('janitor-example.csv')\n```\n:::\n\n\nBelow I will use the `head()` function to show you 6 rows of the data before cleaning them.\n\n(I exaggerated the column name formatting a bit)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pipe dirty_df into head to get only 6 rows, then pipe that into datatable()\ndirty_df %>% \n  head() %>% \n  datatable(options = list(pageLength = 6, dom = 'tip'), rownames = FALSE)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-d93717dbabbbf1f73b4c\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d93717dbabbbf1f73b4c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[98,95,70,85,83,85],[\"sunny\",\"sunny\",\"cloudy\",\"sunny\",\"sunny\",\"sunny\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>DAY OF THE WEEK<\\/th>\\n      <th>TEMP F<\\/th>\\n      <th>WEaThEr CONDITIONS<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":6,\"dom\":\"tip\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[6,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNow I will show you how to clean up those column names with the `janitor` package and `clean_names()` function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_df <- dirty_df %>%\n  clean_names()\n\nclean_df %>%\n  head() %>% \n  datatable(options = list(pageLength = 6, dom = 'tip'), rownames = FALSE)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-1fedd89ca664f5830a3d\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1fedd89ca664f5830a3d\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[98,95,70,85,83,85],[\"sunny\",\"sunny\",\"cloudy\",\"sunny\",\"sunny\",\"sunny\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>day_of_the_week<\\/th>\\n      <th>temp_f<\\/th>\\n      <th>w_ea_th_er_conditions<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":6,\"dom\":\"tip\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[6,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNow that we have the spaces replaced with underscores, and the case all lower, now we can fix the `weather_condition` column and update the `temp_f` column because now we are told that is an average for the day. I will use the `mutate()` and `select()` functions from the `dplyr` package to create a new column that has the corrected names with the respective data, and drop the old ones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mutate new weather_condition column and update avg_temp_f\nclean_df_2 <- clean_df %>%\n  mutate(weather_condition = w_ea_th_er_conditions) %>%\n  mutate(avg_temp_f = temp_f) %>%\n  select(day_of_the_week, avg_temp_f, weather_condition)\n\nclean_df_2 %>%\n  head() %>% \n  datatable(options = list(pageLength = 6, dom = 'tip'), rownames = FALSE)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-24e919f3f3cf60f7cab7\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-24e919f3f3cf60f7cab7\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[98,95,70,85,83,85],[\"sunny\",\"sunny\",\"cloudy\",\"sunny\",\"sunny\",\"sunny\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>day_of_the_week<\\/th>\\n      <th>avg_temp_f<\\/th>\\n      <th>weather_condition<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":6,\"dom\":\"tip\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[6,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/datatables-binding-0.24/datatables.js\"></script>\r\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"site_libs/dt-core-1.11.3/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"site_libs/dt-core-1.11.3/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/dt-core-1.11.3/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}