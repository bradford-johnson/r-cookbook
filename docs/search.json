[
  {
    "objectID": "analyzing-data.html",
    "href": "analyzing-data.html",
    "title": "3¬† Analyzing Data",
    "section": "",
    "text": "Once your data is cleaned up then it is ready to investigate the data in order to find your insights and how significant they are."
  },
  {
    "objectID": "analyzing-data.html#statistical-tests",
    "href": "analyzing-data.html#statistical-tests",
    "title": "3¬† Analyzing Data",
    "section": "3.1 Statistical Tests",
    "text": "3.1 Statistical Tests\n\n3.1.1 T-Test\nA t-test is a good way to see if there is a difference between two groups and ‚Äúquantifying‚Äù the difference of the groups. Learn more about the t-test.\nLets say I wanted to know if there was a difference between the US and Netherlands when it comes to life expectancy. My next steps would be to create a null hypothesis and the alternative hypothesis. For this type of question the null would be that the averages of both groups are equal, the alternative is that they are not equal.\n\nNull hypothesis: average life expectancy of US = average life expectanvy of the Netherlands\nAlternative hypothesis: average life expectancy of US ‚â† average life expectanvy of the Netherlands\n\nNext I want to select my critical value which gives ‚Äúboundaries‚Äù to the acceptance of the test. A common critical value that is used is 0.05, and this means that there is a 5% chance if done 100 times, that I will reject the null hypothesis and accept the alternative. Critical values such as 0.01 is even more accurate as there is a 1% chance of rejecting the null, but a 99% chance of retaining the null, so choosing a critical value can be a balancing act.\n\nCritical Value: ùõº = 0.05\n\nNow to run the t-test to see the results.\n\n# load packages: gapminder for data + tidyverse meta package\nlibrary(gapminder)\nlibrary(tidyverse)\n\n# filter data for life exp and countries: US and Netherlands\ndf1 <- gapminder %>%\n  select(country, lifeExp, year) %>%\n  filter(country == \"United States\" | country == \"Netherlands\") \n  \n t.test(data = df1, lifeExp ~ country)\n\n\n    Welch Two Sample t-test\n\ndata:  lifeExp by country\nt = 1.804, df = 20.316, p-value = 0.08608\nalternative hypothesis: true difference in means between group Netherlands and group United States is not equal to 0\n95 percent confidence interval:\n -0.3366519  4.6766519\nsample estimates:\n  mean in group Netherlands mean in group United States \n                    75.6485                     73.4785 \n\n\nThe results of our t-test show us that the Netherlands has a higher average life expectancy than the US, however with a p-value of .086 I will retain my null hypothesis as there is not a statistical significance in the difference of the means for each of the countries.\nWhat if I look at the life expectancy between the US and South Africa with the same parameters as before?\n\n# filter data for life exp and countries: US and South Africa\ndf2 <- gapminder %>%\n  select(country, lifeExp) %>%\n  filter(country == \"United States\" | country == \"South Africa\") \n  \n t.test(data = df2, lifeExp ~ country)\n\n\n    Welch Two Sample t-test\n\ndata:  lifeExp by country\nt = -10.549, df = 18.243, p-value = 3.392e-09\nalternative hypothesis: true difference in means between group South Africa and group United States is not equal to 0\n95 percent confidence interval:\n -23.36235 -15.60832\nsample estimates:\n mean in group South Africa mean in group United States \n                   53.99317                    73.47850 \n\n\nAs you can see there is a much larger difference in the average life expectancy between the countries, and with a p-value of 3.392e-09. This p-value is in scientific notation as it is such a small decimal, in decimal form it would be 0.000000003392 which is much smaller than .05 meaning this difference in life expectancy is statistically significant. In this case I would reject my null hypothesis and accept the alternative hypothesis that the average life expectancy of the United States is not equal to the average life expectancy of South Africa.\nIf I where reporting this insight, I could say that the life expectancy in the United States is significantly higher than that of South Africa‚Ä¶ and instead of giving the p-value in decimal format or scientific notation, I could say p < .05."
  },
  {
    "objectID": "visualizing-data.html",
    "href": "visualizing-data.html",
    "title": "4¬† Visualizing Data",
    "section": "",
    "text": "There are many ways you can visualize data, and selecting a way to visualize your data depends on what kind of data you have. For example, if you have geographic data, then using a map can be an option. The visual you pick also should be effective at telling the story for your stakeholders.\nFor the different visualizations, I will group them based on what they show:"
  },
  {
    "objectID": "visualizing-data.html#distributions",
    "href": "visualizing-data.html#distributions",
    "title": "4¬† Visualizing Data",
    "section": "4.1 Distributions",
    "text": "4.1 Distributions\nFor this group the visuals all show the audience information about a distribution.\n\n4.1.1 Density Plot\nHere is a good resource that goes more in depth on density plots.\n\n# load in tidyverse package\nlibrary(tidyverse)\n\n# create some random data\nset.seed(0)\n\nn = 10000\n\nsample_means = rep(NA, n)\n\nfor(i in 1:n){\n  sample_means[i] = mean(rnorm(20, mean=0, sd=2))\n}\n\n# save this data into a data frame \nsample_means_df <- data.frame(sample_means)\n\n# create density plot \nsample_means_df %>%\n   ggplot(aes(sample_means)) + \n   geom_density(size = .5) +\n   labs(title = \"Density Plot\", x = \"Sample Means\", y = \"Density\") + \n   theme_classic()\n\n\n\n\n\n\n4.1.2 Density Ridges\nUsing the ggridges package you can compare and see distributions together. Click here for the package documentation.\n\n# create density ridges with 3 randomly sampled distributions \nsamples_df %>%\n  ggplot(aes(x = sample_means, y = sample_n, fill = sample_n)) +\n  geom_density_ridges(alpha = .7) + \n  labs(title = \"Density Ridges Plot\", x =\"Sample Means\", y = \"Sample ID\") +\n  theme_classic()\n\nPicking joint bandwidth of 0.0467\n\n\n\n\n\n\n\n4.1.3 Histogram\nUsing a histogram is another common way to show a distribution. It may look like a ‚Äúbar char‚Äù with many bars, however each ‚Äúbar‚Äù is a bin, and it represents a range of numbers that falls within it‚Äôs respective bin. The height of the ‚Äúbar‚Äù shows a count of how many values fall within a bin.\n\n# create histogram with random data \nsample_means_df %>%\n  ggplot(aes(x = sample_means)) +\n  geom_histogram(bins = 30) +\n  labs(title = \"Histogram\", y = \"Count\", x = \"Sample Means\") +\n  theme_classic()\n\n\n\n\n\n\n4.1.4 Boxplot\nBoxplots can be a useful way to show a distribution, but the distribution is hidden behind each box meaning it could be misinterpreted.\n\n# create boxplots with random data\nsamples_df %>%\n  ggplot(aes(x = sample_n, y = sample_means, fill = sample_n)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot\") +\n  theme_classic()\n\n\n\n\n\n\n4.1.5 Violin Chart\nSimilar to a boxplot but shows the shape of a distribution better.\n\n# create violin charts with random data\nsamples_df %>%\n  ggplot(aes(x = sample_n, y = sample_means, fill = sample_n)) +\n  geom_violin() +\n  labs(title = \"Violin Chart\") +\n  theme_classic()"
  },
  {
    "objectID": "visualizing-data.html#comparisons",
    "href": "visualizing-data.html#comparisons",
    "title": "4¬† Visualizing Data",
    "section": "4.2 Comparisons",
    "text": "4.2 Comparisons\nFor this group the visuals compare insights for the audience.\n\n4.2.1 Bar Chart\nBar charts are very simple and effective at conveying information, never underestimate the power of a bar chart.\n\n# read in iris dataset \niris_df <- iris %>%\n  clean_names()\n\n# group the data by species, then summarize the avg petal width for each species\niris_df %>% \n  group_by(species) %>%\n  summarize(avg_petal_width = mean(petal_width)) %>%\n  ggplot(aes(x = species, y = avg_petal_width, fill = species)) +\n  geom_col() +\n  labs(title = \"Bar Chart\", y = \"Avg Petal Width\", x = \"Species\") +\n  theme_classic()\n\n\n\n\n\n\n4.2.2 Horizontal Bar Chart\nSimilar to a bar chart, but a horizontal version, can be useful but when viewing, stakeholders can more easily distinguish a difference in the vertical counterpart than in the horizontal bar chart. This is the same bar chart as above, created with + geom_col() but to rotate the plot I used the + coord_flip() function.\n\n# create horizontal bar chart\niris_df %>% \n  group_by(species) %>%\n  summarize(avg_petal_width = mean(petal_width)) %>%\n  ggplot(aes(x = species, y = avg_petal_width, fill = species)) +\n  geom_col() +\n  labs(title = \"Horizontal Bar Chart\", y = \"Avg Petal Width\", x = \"Species\") +\n  theme_classic() +\n  coord_flip()\n\n\n\n\n\n\n4.2.3 Line Chart\nLine charts are essential when working time.\n\n# read in chickweight dataset\nchick_df <- ChickWeight %>%\n  clean_names()\n\n# filter and group by chick 1, 21, 45\nchick_df %>%\n  filter(chick == 1|chick == 21|chick == 45) %>%\n  group_by(chick) %>%\n  ggplot(aes(x = time, y = weight, color = diet)) + \n  geom_line(size = .8) +\n  labs(title = \"Line Chart\", x = \"Time\", y = \"Chicken Weight\") +\n  theme_classic()"
  },
  {
    "objectID": "visualizing-data.html#relationships",
    "href": "visualizing-data.html#relationships",
    "title": "4¬† Visualizing Data",
    "section": "4.3 Relationships",
    "text": "4.3 Relationships\n\n4.3.1 Scatter Plot\nScatter Plots are great ways to visualize relationships within datasets. There are many different aesthetics you can control to add more layers to a scatter plot too.\nThis is an example of a simple scatter plot.\n\n# load in data\nscatter_plot_df <- datasets::cars\n\n# create scatter plot \nscatter_plot_df %>%\n  ggplot(aes(x = dist, y = speed)) +\n  geom_jitter() + \n  labs(title = \"Simple Scatter Plot\", y = \"Speed\", x = \"Distance\") +\n  theme_classic()\n\n\n\n\nA scatter plot with more layers can use aesthetics such as size, fill, shape, geom_smooth() or facet_wrap().\n\ngapminder %>%\n  group_by(country) %>%\n  ggplot(aes(x = log(gdpPercap), y = lifeExp, col = year, size = pop)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~continent) +\n  labs(title = \"Scatter Plot with more levels\", \n       x = \"GDP Per Cap\", y = \"Life Expectancy\") + \n  theme_minimal()"
  },
  {
    "objectID": "visualizing-data.html#composition",
    "href": "visualizing-data.html#composition",
    "title": "4¬† Visualizing Data",
    "section": "4.4 Composition",
    "text": "4.4 Composition\n\n4.4.1 Pie Chart\nPie charts are useful when used properly, as a means of showing the composition categories etc. There should not be more than 5 items being displayed as it is hard to actualize the composition of something when there is lots of small pieces. 2-4 total ‚Äúslices‚Äù is ideal for seeing how the data is made up for specific insights.\n\nlibrary(formattable)\n\niris_df %>%\n  group_by(species) %>%\n  summarise(cnt = n()) %>%\n  mutate(freq = formattable::percent(cnt / sum(cnt))) %>% \n  ggplot(aes(x = \"\", y = freq, fill = species)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  geom_text(aes(label = paste0(freq)), position = position_stack(vjust=0.5)) +\n  labs(title = \"Pie Chart\")"
  }
]